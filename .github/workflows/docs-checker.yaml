name: Spellcheck & Link Checker

on:
  push:
    branches:
      - '*'
    paths:
      - 'README.md'
      - '.github/extract-python-code.py'
      - 'docs/**'
      - '.github/workflows/docs-checker.yaml'
  schedule:
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  spellcheck:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pyspelling

      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en

      - name: Spellcheck Markdown files
        run: |
          pyspelling -c .github/.pyspelling.yaml

  check-README-links:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install markdown-link-check
        run: npm install -g markdown-link-check

      - name: Check links in README.md
        run: markdown-link-check README.md

  check-docs-links:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y linkchecker

      - name: Check links
        id: linkcheck
        run: linkchecker https://docs.lavague.ai/en/latest/

  check-bullet-points-format:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run markdown formatting check
        run: |
          chmod +x .github/bullet-points.sh
          .github/bullet-points.sh

  check-docs-examples:
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip cache purge
          pip install lavague
          pip install lavague-contexts-gemini
          pip install lavague-contexts-fireworks
          pip install llama-index-embeddings-huggingface 
          pip install llama-index-llms-groq
          pip install ipython>=7.34.0
          pip install text_generation
          wget https://raw.githubusercontent.com/lavague-ai/LaVague/main/examples/knowledge/hf_knowledge.txt

      - name: Extract Python code
        run: |
          rm ./docs/docs/examples/qa-automation.md
          python .github/extract-python-code.py ./docs/docs/get-started/*.md


      - name: Run extracted Python scripts
        run: |
          if [ -f generated_scripts.txt ]; then
            while IFS= read -r script_file
            do
              echo "Running $script_file"
              cat $script_file
              python "$script_file"
            done < generated_scripts.txt
          else
            echo "No generated scripts found."
          fi

      - name: Clean up
        run: |
          rm hf_knowledge.txt
          rm -f generated_scripts.txt

  notify-docs-examples-failure:
    runs-on: ubuntu-latest
    needs: check-docs-examples
    if: failure() 
    steps:
      - name: Notify Discord on docs-examples failure
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"<@762664509813817345> Cron job for 'check-docs-examples' failed\"}" \
            ${{ secrets.DOCS_DISCORD_WEBHOOK }}

  notify-docs-links-failure:
    runs-on: ubuntu-latest
    needs: check-docs-links
    if: failure() 
    steps:
      - name: Notify Discord on docs-links failure
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"<@762664509813817345> Cron job for 'check-docs-links' failed\"}" \
            ${{ secrets.DOCS_DISCORD_WEBHOOK }}
  
  notify-checks-success:
    runs-on: ubuntu-latest
    needs: [check-docs-links, check-docs-links]
    if: success() 
    steps:
      - name: Notify Discord on successful checks
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"<@762664509813817345> Checks successfully passed\"}" \
            ${{ secrets.DOCS_DISCORD_WEBHOOK }}